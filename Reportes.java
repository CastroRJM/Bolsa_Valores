/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto_Bolsa;

import clases.Conexion;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.awt.Image;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author luisk
 */
public class Reportes extends javax.swing.JFrame {

    /**
     * Creates new form Reportes
     */
    public Reportes() {
        initComponents();
        this.setTitle("Reportes");
        this.setLocationRelativeTo(null);
        this.setSize(623,294);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
          ImageIcon wallpaper=new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono=new ImageIcon(wallpaper.getImage().getScaledInstance(label_principal.getWidth(),
                label_principal.getHeight(),Image.SCALE_DEFAULT));
        label_principal.setIcon(icono);
        this.repaint();
        this.AjustarBotones();
    }

    private void AjustarBotones(){
       ImageIcon imagen1 = new ImageIcon("src/images_bolsa/cursos.png");
        Icon icono_img1 = new ImageIcon(imagen1.getImage().getScaledInstance( btn_Reporte_Cursos.getWidth(),  btn_Reporte_Cursos.getHeight(), Image.SCALE_DEFAULT));
        btn_Reporte_Cursos.setIcon(icono_img1);
      
         ImageIcon imagen2 = new ImageIcon("src/images_bolsa/horario.png");
        Icon icono_img2 = new ImageIcon(imagen2.getImage().getScaledInstance( btn_Reporte_horario.getWidth(),  btn_Reporte_horario.getHeight(),  Image.SCALE_DEFAULT));
         btn_Reporte_horario.setIcon(icono_img2);
        
         ImageIcon imagen3 = new ImageIcon("src/images_bolsa/trabajador.png");
        Icon icono_img3 = new ImageIcon(imagen3.getImage().getScaledInstance( btn_Reporte_ho_max.getWidth(),  btn_Reporte_ho_max.getHeight(), Image.SCALE_DEFAULT));
         btn_Reporte_ho_max.setIcon(icono_img3);
       ;
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Reporte_Cursos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btn_Reporte_horario = new javax.swing.JButton();
        btn_Reporte_ho_max = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        label_principal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_Reporte_Cursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Reporte_CursosActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Reporte_Cursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 140, 100));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Empleado Mas Horas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, 190, 60));

        btn_Reporte_horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Reporte_horarioActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Reporte_horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 140, 100));

        btn_Reporte_ho_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Reporte_ho_maxActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Reporte_ho_max, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 140, 100));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ELIGE REPORTE A IMPRIMIR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Empleados Cursos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 160, 60));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Empleados Horarios");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 180, 60));
        getContentPane().add(label_principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 294));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new Mantenimiento_bolsa().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void btn_Reporte_CursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Reporte_CursosActionPerformed
      Document documento = new Document();
      try{
          String ruta = System.getProperty("user.home");//Para referiirnos que se guardara en nuestra computadora
          PdfWriter.getInstance(documento,new FileOutputStream(ruta+"/Desktop/Empleado_Cursos.pdf"));//Simplmente lo estamos guardando en el escritorio
          
          com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/images_bolsa/bolsa_logo.png");//Estamos creando un encabezado para la imagen 
          header.scaleToFit(650,1000);//El tamaño de nuestra encabezado width y height
          header.setAlignment(Chunk.ALIGN_CENTER);//Lo estamos alinenado al centro
          
          Paragraph parrafo = new Paragraph(); //Estamos creando un parrafo
          parrafo.setAlignment(Paragraph.ALIGN_CENTER);//Lo estamos centrando
          parrafo.add("Empleados que han tomado cursos. \n\n");//Vamos escribir el texto 
          parrafo.setFont(FontFactory.getFont("Tahoma", 28, Font.BOLD, BaseColor.DARK_GRAY));//Estamos agregando font a nuestro parrafo,tamaño,estilo, color etc.
          
          
          documento.open();//Estamos abriendo el documento
          documento.add(header);//Agregndo el encabezado
          documento.add(parrafo);//Agregando el parrafo
          
          
          PdfPTable tabla = new PdfPTable(6); //Agregando el numero de columnas
          tabla.addCell("No_Empleado");//Nombre de las columnas
          tabla.addCell("Nombre");
          tabla.addCell("Apellido P");
          tabla.addCell("Apellido M");
          tabla.addCell("Departamento");
          tabla.addCell("Curso");
          
          
          try{//Conectandolo a la base de datos
              Connection cn = Conexion.conectar();
              PreparedStatement pst = cn.prepareStatement("SELECT no_empleado,nombre,apellido_p,apellido_m,tipo_depto,tipo_curso "
                      + "FROM empleado,bolsa,curso,curso_empleado,departamento "
                      + "WHERE bolsa.id_empleado = empleado.id_bolsa and empleado.no_empleado = curso_empleado.id_empleado "
                      + "and curso.id_curso=curso_empleado.id_curso and empleado.id_depto=departamento.id_depto GROUP by tipo_curso");
              ResultSet rs = pst.executeQuery();
              
              if(rs.next()){
                  do{
                      tabla.addCell(rs.getString(1));
                      tabla.addCell(rs.getString(2));
                      tabla.addCell(rs.getString(3));
                      tabla.addCell(rs.getString(4));
                      tabla.addCell(rs.getString(5));
                      tabla.addCell(rs.getString(6));
                  }while(rs.next());
                  documento.add(tabla);
              }
          }catch(SQLException ex){
              JOptionPane.showMessageDialog(null,"Mal conectado");
          }
          documento.close();
          JOptionPane.showMessageDialog(null,"Reporte creado");
      }catch(Exception ex){
          
      }
    }//GEN-LAST:event_btn_Reporte_CursosActionPerformed

    private void btn_Reporte_horarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Reporte_horarioActionPerformed
        Document documento = new Document();
      try{
          String ruta = System.getProperty("user.home");//Para referiirnos que se guardara en nuestra computadora
          PdfWriter.getInstance(documento,new FileOutputStream(ruta+"/Desktop/Empleado_Mas_Trabajador.pdf"));//Simplmente lo estamos guardando en el escritorio
          
          com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/images_bolsa/bolsa_logo.png");//Estamos creando un encabezado para la imagen 
          header.scaleToFit(650,1000);//El tamaño de nuestra encabezado width y height
          header.setAlignment(Chunk.ALIGN_CENTER);//Lo estamos alinenado al centro
          
          Paragraph parrafo = new Paragraph(); //Estamos creando un parrafo
          parrafo.setAlignment(Paragraph.ALIGN_CENTER);//Lo estamos centrando
          parrafo.add("Empleados que mas trabajan por departamento. \n\n");//Vamos escribir el texto 
          parrafo.setFont(FontFactory.getFont("Times New Roman", 28, Font.BOLD, BaseColor.DARK_GRAY));//Estamos agregando font a nuestro parrafo,tamaño,estilo, color etc.
          
          
          documento.open();//Estamos abriendo el documento
          documento.add(header);//Agregndo el encabezado
          documento.add(parrafo);//Agregando el parrafo
          
          
          PdfPTable tabla = new PdfPTable(6); //Agregando el numero de columnas
          tabla.addCell("No_Empleado");//Nombre de las columnas
          tabla.addCell("Nombre");
          tabla.addCell("Apellido P");
          tabla.addCell("Apellido M");
          tabla.addCell("Departamento");
          tabla.addCell("Horario");
          
          
          try{//Conectandolo a la base de datos
              Connection cn = Conexion.conectar();
              PreparedStatement pst = cn.prepareStatement("SELECT no_empleado,nombre,apellido_p,apellido_m,tipo_depto,tipo_horario "
                      + "FROM empleado,bolsa,departamento,horario "
                      + "WHERE bolsa.id_empleado = empleado.id_bolsa and empleado.id_depto=departamento.id_depto "
                      + "and empleado.id_horario=horario.id_horario GROUP by tipo_depto");
              ResultSet rs = pst.executeQuery();
              
              if(rs.next()){
                  do{
                      tabla.addCell(rs.getString(1));
                      tabla.addCell(rs.getString(2));
                      tabla.addCell(rs.getString(3));
                      tabla.addCell(rs.getString(4));
                      tabla.addCell(rs.getString(5));
                      tabla.addCell(rs.getString(6));
                  }while(rs.next());
                  documento.add(tabla);
              }
          }catch(SQLException ex){
              JOptionPane.showMessageDialog(null,"Mal conectado");
          }
          documento.close();
          JOptionPane.showMessageDialog(null,"Reporte creado");
      }catch(Exception ex){
          
      }
    }//GEN-LAST:event_btn_Reporte_horarioActionPerformed

    private void btn_Reporte_ho_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Reporte_ho_maxActionPerformed
         Document documento = new Document();
      try{
          String ruta = System.getProperty("user.home");//Para referiirnos que se guardara en nuestra computadora
          PdfWriter.getInstance(documento,new FileOutputStream(ruta+"/Desktop/Empleado_Horarios.pdf"));//Simplmente lo estamos guardando en el escritorio
          
          com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/images_bolsa/bolsa_logo.png");//Estamos creando un encabezado para la imagen 
          header.scaleToFit(650,1000);//El tamaño de nuestra encabezado width y height
          header.setAlignment(Chunk.ALIGN_CENTER);//Lo estamos alinenado al centro
          
          Paragraph parrafo = new Paragraph(); //Estamos creando un parrafo
          parrafo.setAlignment(Paragraph.ALIGN_CENTER);//Lo estamos centrando
          parrafo.add("Empleados y sus turnos. \n\n");//Vamos escribir el texto 
          parrafo.setFont(FontFactory.getFont("Times New Roman", 28, Font.BOLD, BaseColor.DARK_GRAY));//Estamos agregando font a nuestro parrafo,tamaño,estilo, color etc.
          
          
          documento.open();//Estamos abriendo el documento
          documento.add(header);//Agregndo el encabezado
          documento.add(parrafo);//Agregando el parrafo
          
          
          PdfPTable tabla = new PdfPTable(6); //Agregando el numero de columnas
          tabla.addCell("No_Empleado");//Nombre de las columnas
          tabla.addCell("Nombre");
          tabla.addCell("Apellido P");
          tabla.addCell("Apellido M");
          tabla.addCell("Departamento");
          tabla.addCell("Total_Horas");
          
          
          try{//Conectandolo a la base de datos
              Connection cn = Conexion.conectar();
              PreparedStatement pst = cn.prepareStatement("SELECT no_empleado,nombre,apellido_p,apellido_m,tipo_depto,total_horas "
                      + "FROM empleado,bolsa,departamento "
                      + "WHERE bolsa.id_empleado = empleado.id_bolsa and empleado.id_depto=departamento.id_depto "
                      + " GROUP by tipo_depto,total_horas desc "
                      );
              ResultSet rs = pst.executeQuery();
              
              if(rs.next()){
                  do{
                      tabla.addCell(rs.getString(1));
                      tabla.addCell(rs.getString(2));
                      tabla.addCell(rs.getString(3));
                      tabla.addCell(rs.getString(4));
                      tabla.addCell(rs.getString(5));
                      tabla.addCell(rs.getString(6));
                  }while(rs.next());
                  documento.add(tabla);
              }
          }catch(SQLException ex){
              JOptionPane.showMessageDialog(null,"Mal conectado");
          }
          documento.close();
          JOptionPane.showMessageDialog(null,"Reporte creado");
      }catch(Exception ex){
          
      } 
       
    }//GEN-LAST:event_btn_Reporte_ho_maxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Reporte_Cursos;
    private javax.swing.JButton btn_Reporte_ho_max;
    private javax.swing.JButton btn_Reporte_horario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel label_principal;
    // End of variables declaration//GEN-END:variables
}
